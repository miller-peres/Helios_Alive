// Simulation of I2C Memory (Slave): like Philips PCF8570 (256 byte I2C RAM)
MAP V:0x40000000,V:0x400000FF READ WRITE // Map User Memory region
DEFINE int SADR // Slave Address

signal void I2CMEMORY (void) {
unsigned long adr;
adr = V:0x4000000;

	while (1) {
		wwatch (I2C_OUT); // Wait for data from Microcontroller
		while (I2C_OUT == 0x0100) { // START detected
		  
			wwatch (I2C_OUT); // Wait for data from Microcontroller
			if (I2C_OUT > 0xFF) continue;
			I2C_IN = (I2C_OUT >> 1);
			if ((I2C_OUT >> 1) != SADR) continue; // test if Slave is addressed
			I2C_IN = 0xFF00; // ACK to Microcontroller
			if (I2C_OUT & 1) { // Slave Read
				while (1) {
					I2C_IN = _RBYTE(adr); // Read Byte from Memory
					adr++; // Increment Address
					wwatch (I2C_OUT); // Wait for ACK from Microcontroller
					if (I2C_OUT != 0xFF00) break;
				}
			}
			else { // Slave Write
				wwatch (I2C_OUT); // Wait for data from Microcontroller
				if (I2C_OUT > 0xFF) continue;
					adr = I2C_OUT | V:0; // Set Memory Address
					I2C_IN = 0xFF00; // ACK to Microcontroller
					while (1) {
						wwatch (I2C_OUT); // Wait for data from Microcontroller
						if (I2C_OUT > 0xFF) break;
							_WBYTE (adr, I2C_OUT); // Store Byte in Memory
						adr++; // Increment Address
						I2C_IN = 0xFF00; // ACK to Microcontroller
					}
				}
			}
	}
}
SADR = 0x14 ;// I2C Memory Slave Address
I2CMEMORY();
